System:
  1. A distributed system which will accept multiple incoming requests from the File System and Peers
  2. Has a hashed structure to store the file object values to its addresses
  4. Every Peer will have one backup server.

Server:
  1. Designed to Accept JOIN and BACKUP connections from machines willing to be peers.
  2. Store, Search and Read a file requests from the client.
  3. Stores the mapped structure of File Object Values to Client addresses.
  4. Disconnects the connection between the peer after establishing its location within the decentralized network
  5. Elects the backup server for each peer based on the pre-defined quoram values.

Electing a peer:
  1. For every single peer, there should exist a backup peer.
  2. When a request is made the peer, the master would check if a backup peer is needed for the
  recently added peer. If so, it will make the current peer the backup to the recently added peer
  3. If not, it would send a signal to requesting peer that it has been successfully registered with the master

  Peer:
    1. Peer is designed to have a finger table or hash table which stores the address of the clients associated with the file chunks(if they are split)
    2. Knows its hashed object Values
    3. Knows its backup server
    4. Runs a synchronous light weight process to maintain updated information.
    5. Backup peer has its current Information stored in a savepoint until updated.

Client:
Maintain cache for knowing the peer previously contacted, after cache expiration check with the master again for a peer

Future work:
Eventual consistency - currently the file system will be built for one client (consistency comes into the picture when multiple
clients are trying to access same file)
